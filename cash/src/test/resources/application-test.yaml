spring:
  application:
    name: bankCash
  sql.init:
    mode: always
    schema-locations: classpath:schema.sql
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/bankapp
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:8090/realms/bankapp
        registration:
          bank_cash:
            provider: keycloak
            authorizationGrantType: client_credentials
            client-id: bank_cash
            client-secret: h09XeFhfvzA4wB68DyIwFx7zKM27aGP7
            clientAuthenticationMethod: client_secret_post
  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties.spring.json.type.mapping: note:com.github.mrchcat.shared.notification.BankNotificationDto
      acks: all

management:
  endpoints.web.exposure.include: info, health, metrics,prometheus
  tracing:
    sampling:
      probability: 0.1

logging:
  pattern.file: "%d{HH:mm:ss} %-5level %logger{36} - %msg%n"
  level:
    root: DEBUG
    org.zalando.logbook: DEBUG

resilience4j:
  circuitbreaker:
    configs:
      default:
        sliding-window-type: TIME_BASED
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 10
        slowCallDurationThreshold: 4s
        slowCallRateThreshold: 90
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        minimumNumberOfCalls: 10
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 100ms

application:
  service:
    urls:
      account: localhost:8081
      blocker: localhost:8089
      cash: localhost:8083
  kafka:
    topic:
      notifications: bank-notifications