# Subchart for front
front:
  replicaCount: 1
  LOG_LEVEL: INFO
  INITIAL_DELAY_SEC: 20

# Subchart for account
account:
  replicaCount: 1
  LOG_LEVEL: INFO
  INITIAL_DELAY_SEC: 20

# Subchart for blocker
blocker:
  replicaCount: 1
  LOG_LEVEL: INFO
  INITIAL_DELAY_SEC: 20

# Subchart for cash
cash:
  replicaCount: 1
  LOG_LEVEL: INFO
  INITIAL_DELAY_SEC: 20

# Subchart for exchange
exchange:
  replicaCount: 1
  LOG_LEVEL: INFO
  INITIAL_DELAY_SEC: 20

# Subchart for exchange-generator
exchange-generator:
  replicaCount: 1
  LOG_LEVEL: INFO
  INITIAL_DELAY_SEC: 20

# Subchart for notifications
notifications:
  replicaCount: 1
  LOG_LEVEL: INFO
  INITIAL_DELAY_SEC: 20


# Subchart for transfer
transfer:
  replicaCount: 1
  LOG_LEVEL: INFO
  INITIAL_DELAY_SEC: 20

# Subchart for Zipkin
zipkin:
  ingress:
    enabled: true
    host: "zipkin.internal.com"
  fullnameOverride: "zipkin"

# Subchart for Prometheus
prometheus:
  server:
    fullnameOverride: prometheus-server
    ingress:
      enabled: true
      hosts:
        - prometheus.internal.com
    global:
      scrape_interval: 15s
  serverFiles:
    prometheus.yml:
      scrape_configs:
        - job_name: 'front'
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: [ 'front:8080' ]
              labels:
                application: 'front'
        - job_name: 'account'
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: [ 'account:8080' ]
              labels:
                application: 'accounts'
        - job_name: 'blocker'
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: [ 'blocker:8080' ]
              labels:
                application: 'blocker'
        - job_name: 'cash'
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: [ 'cash:8080' ]
              labels:
                application: 'cash'
        - job_name: 'exchange'
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: [ 'exchange:8080' ]
              labels:
                application: 'exchange'
        - job_name: 'exchange-generator'
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: [ 'exchange-generator:8080' ]
              labels:
                application: 'exchange-generator'
        - job_name: 'notifications'
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: [ 'notifications:8080' ]
              labels:
                application: 'notifications'
        - job_name: 'transfer'
          metrics_path: /actuator/prometheus
          static_configs:
            - targets: [ 'transfer:8080' ]
              labels:
                application: 'transfer'

# Subchart for Grafana
grafana:
  admin:
    existingSecret: grafana-secret
  ingress:
    enabled: true
    hosts:
      - grafana.internal.com
  dashboards:
    default:
      spring-boot:
        file: dashboards/19004_rev1.json
      prometheus-stats:
        # Ref: https://grafana.com/dashboards/2
        gnetId: 2
        revision: 2
        datasource: Prometheus

# Subchart for Kafka
#kafka:

# Subchart for keycloak
#keycloak:

# Subchart for Logstash
logstash:
  logstashPipeline:
    logstash.conf: |
      input {
        kafka {
            bootstrap_servers => "kafka:9092"
            topics => ["cash-log","exchange-generator-log","exchange-log","front-log","notifications-log","transfer-log"]
            group_id => "bank-logstash"
            decorate_events  => extended
            enable_auto_commit  => true
        }
      }
      filter {
        json {
          source => "message"
          remove_field => [ "endOfBatch", "loggerFqcn","threadId","threadPriority","event"]
        }
        mutate {
          copy => { "[instant][epochSecond]" => "logger_timestamp_epochSeconds"}
        }
        mutate {
          remove_field => ["instant"]
        }
        date {
          match => [ "logger_timestamp_epochSeconds","UNIX" ]
          target => "logger_timestamp"
        }
      }
      output {
        stdout {}
        elasticsearch {
          hosts => ["https://elasticsearch-master:9200"]
          index => "bankapp-logs-%{+YYYY.MM.dd}"
          retry_on_conflict => 3
          ssl_certificate_verification => false
          user => "elastic"
          password => "admin"
        }
      }

# Subchart for Elsaticsearch
elasticsearch:
  antiAffinity: "soft"

  xpack.security.enabled: false

  xpack.security.http.ssl:
    enabled: false
    keystore.path: certs/http.p12

  xpack.security.authc:
    anonymous:
      username: anonymous_user
      roles: superuser
      authz_exception: true

  secret:
    enabled: true
    password: "admin"

  # Shrink default JVM heap.
  esJavaOpts: "-Xmx128m -Xms128m"

  # Allocate smaller chunks of memory per pod.
  resources:
    requests:
      cpu: "100m"
      memory: "512M"
    limits:
      cpu: "1000m"
      memory: "512M"

  # Request smaller persistent volumes.
  volumeClaimTemplate:
    accessModes: [ "ReadWriteOnce" ]
    storageClassName: "standard"
    resources:
      requests:
        storage: 100M

# Subchart for Kibana
kibana:
  ingress:
    enabled: true
    hosts:
      - host: kibana.internal.com
        paths:
          - path: /