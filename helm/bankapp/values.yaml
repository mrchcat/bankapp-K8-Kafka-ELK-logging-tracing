# Subchart for front
front:
  replicaCount: 1

  HOST_NAME: "bankapp.internal.com"

  SPRING_APPLICATION_NAME: bankFront

  KEYCLOAK_ISSUER_URI: http://keycloak:9080/realms/bankapp
  KEYCLOAK_CLIENT_ID: bank_front
  KEYCLOAK_CLIENT_SECRET: wKWXOS1YJgNvFHt6jHL2mjgmHHvGu2r0

  ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
  ZIPKIN_TRACING_PROBABILITY: 1

  LOG_LEVEL: INFO

  INITIAL_DELAY_SEC: 10

  SERVICE_URL_ACCOUNT: account:8080
  SERVICE_URL_CASH: cash:8080
  SERVICE_URL_TRANSFER: transfer:8080
  SERVICE_URL_EXCHANGE: exchange:8080

  image:
    repository: mcat1980/bank-front
    tag: "1.0"
    pullPolicy: IfNotPresent

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: "front"

  service:
    type: ClusterIP
    port: 8080


# Subchart for account
account:
  replicaCount: 1

  SPRING_APPLICATION_NAME: bankAccounts

  SERVICE_URL_ACCOUNT: account:8080

  KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  KAFKA_NOTIFICATIONS_TOPIC: bank-notifications

  KEYCLOAK_ISSUER_URI: http://keycloak:9080/realms/bankapp
  KEYCLOAK_CLIENT_ID: bank_accounts
  KEYCLOAK_CLIENT_SECRET: EF3owQYOVaDIDnBr14jkSt3kuResW6x0

  DATASOURCE_USERNAME: user
  DATASOURCE_PASSWORD: password

  ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
  ZIPKIN_TRACING_PROBABILITY: 1

  LOG_LEVEL: INFO

  INITIAL_DELAY_SEC: 10

  image:
    repository: mcat1980/bank-account
    tag: "3.0"
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: "account"

  service:
    type: ClusterIP
    port: 8080

  database:
    image:
      repository: postgres
      tag: "17.5"

# Subchart for blocker
blocker:
  replicaCount: 1

  SPRING_APPLICATION_NAME: bankBlocker

  KEYCLOAK_ISSUER_URI: http://keycloak:9080/realms/bankapp

  ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
  ZIPKIN_TRACING_PROBABILITY: 1

  CONFIRM_PROBABILITY: 0.97

  LOG_LEVEL: INFO

  INITIAL_DELAY_SEC: 10

  image:
    repository: mcat1980/bank-blocker
    tag: "1.0"
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: "blocker"

  service:
    type: ClusterIP
    port: 8080

# Subchart for cash
cash:
  replicaCount: 1

  SERVER_PORT: "8080"
  SPRING_APPLICATION_NAME: bankCash

  KEYCLOAK_ISSUER_URI: http://keycloak:9080/realms/bankapp
  KEYCLOAK_CLIENT_ID: bank_cash
  KEYCLOAK_CLIENT_SECRET: h09XeFhfvzA4wB68DyIwFx7zKM27aGP7

  DATASOURCE_USERNAME: user
  DATASOURCE_PASSWORD: password

  KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  KAFKA_NOTIFICATIONS_TOPIC: bank-notifications

  ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
  ZIPKIN_TRACING_PROBABILITY: 1

  LOG_LEVEL: INFO

  INITIAL_DELAY_SEC: 10

  SERVICE_URL_ACCOUNT: account:8080
  SERVICE_URL_BLOCKER: blocker:8080
  SERVICE_URL_CASH: cash:8080

  image:
    repository: mcat1980/bank-cash
    tag: "1.0"
    pullPolicy: IfNotPresent


  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: "cash"

  service:
    type: ClusterIP
    port: 8080

  database:
    image:
      repository: postgres
      tag: "17.5"


# Subchart for exchange
exchange:
  replicaCount: 1

  SPRING_APPLICATION_NAME: bankExchange

  KEYCLOAK_ISSUER_URI: http://keycloak:9080/realms/bankapp

  DATASOURCE_USERNAME: user
  DATASOURCE_PASSWORD: password

  LOG_LEVEL: INFO

  KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  KAFKA_EXCHANGE_RATES_TOPIC: bank-exchange-rates

  ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
  ZIPKIN_TRACING_PROBABILITY: 1

  INITIAL_DELAY_SEC: 10

  image:
    repository: mcat1980/bank-exchange
    tag: "1.0"
    pullPolicy: IfNotPresent

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: "exchange"

  service:
    type: ClusterIP
    port: 8080

  database:
    image:
      repository: postgres
      tag: "17.5"

# Subchart for exchange-generator
exchange-generator:
  replicaCount: 1

  SPRING_APPLICATION_NAME: bankExchangeGenerator

  KEYCLOAK_ISSUER_URI: http://keycloak:9080/realms/bankapp
  KEYCLOAK_CLIENT_ID: bank_exchange_generator
  KEYCLOAK_CLIENT_SECRET: N1VSP9EH3qUeGa98gzE4qxnFsTg7Q8eO

  SERVICE_URL_EXCHANGE: exchange:8080

  LOG_LEVEL: INFO

  KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  KAFKA_EXCHANGE_RATES_TOPIC: bank-exchange-rates

  ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
  ZIPKIN_TRACING_PROBABILITY: 1

  INITIAL_DELAY_SEC: 10

  image:
    repository: mcat1980/bank-exchange-generator
    tag: "1.0"
    pullPolicy: IfNotPresent

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: "exchange-generator"

  service:
    type: ClusterIP
    port: 8080

# Subchart for notifications
notifications:
  replicaCount: 1

  SPRING_APPLICATION_NAME: bankNotifications

  KEYCLOAK_ISSUER_URI: http://keycloak:9080/realms/bankapp

  DATASOURCE_URL: jdbc:postgresql://notifications-db:5432/data
  DATASOURCE_USERNAME: user
  DATASOURCE_PASSWORD: password

  LOG_LEVEL: INFO

  KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  KAFKA_NOTIFICATIONS_TOPIC: bank-notifications

  ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
  ZIPKIN_TRACING_PROBABILITY: 1

  MAIL_DELIVERY_ENABLED: false
  SMTP_SERVER_HOST: smtp.mail.ru
  SMTP_SERVER_PORT: "465"
  MAIL_USERNAME: for_develop_test@mail.ru
  MAIL_PASSWORD: P9MY5cEAGGD2aThf7pgp
  FROM_MAIL_ADDRESS: for_develop_test@mail.ru
  SENDER_NAME_FOR_MAIL: "Birbank LLC"

  INITIAL_DELAY_SEC: 10

  image:
    repository: mcat1980/bank-notifications
    tag: "3.0"
    pullPolicy: IfNotPresent

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: "notifications"

  service:
    type: ClusterIP
    port: 8080

  database:
    image:
      repository: postgres
      tag: "17.5"

# Subchart for transfer
transfer:
  replicaCount: 1

  SPRING_APPLICATION_NAME: bankTransfer

  KEYCLOAK_ISSUER_URI: http://keycloak:9080/realms/bankapp
  KEYCLOAK_CLIENT_ID: bank_transfer
  KEYCLOAK_CLIENT_SECRET: TBdc8HtAio8f0SXlvHPWS6Cbbz5i6yEf

  DATASOURCE_URL: jdbc:postgresql://transfer-db:5432/data
  DATASOURCE_USERNAME: user
  DATASOURCE_PASSWORD: password

  SERVICE_URL_ACCOUNT: account:8080
  SERVICE_URL_BLOCKER: blocker:8080
  SERVICE_URL_EXCHANGE: exchange:8080
  SERVICE_URL_TRANSFER: transfer:8080

  KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  KAFKA_NOTIFICATIONS_TOPIC: bank-notifications

  ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
  ZIPKIN_TRACING_PROBABILITY: 1

  LOG_LEVEL: INFO

  INITIAL_DELAY_SEC: 10

  image:
    repository: mcat1980/bank-transfer
    tag: "1.0"
    pullPolicy: IfNotPresent

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: "transfer"

  service:
    type: ClusterIP
    port: 8080

  database:
    image:
      repository: postgres
      tag: "17.5"

# Subchart for Zipkin
zipkin:
  service:
    port: 9411
  storage.type: mem
  ingress:
    enabled: true
    host: "zipkin.internal.com"
  fullnameOverride: "zipkin"

# Subchart for Kafka
kafka:
  kafka:
    enabled: true
    fullnameOverride: "kafka"
    controller:
      enabled: true
      replicaCount: 3
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 30
        failureThreshold: 10
      livenessProbe:
        initialDelaySeconds: 30
        periodSeconds: 30
        failureThreshold: 10
    broker:
      replicaCount: 0
      persistence:
        size: 1Gi
      readinessProbe:
        initialDelaySeconds: 30
        periodSeconds: 30
        failureThreshold: 10
    clusterId: a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6
    provisioning:
      enabled: true
      topics:
        - name: "bank-notifications"
          partitions: 2
          replicationFactor: 2
        - name: "bank-exchange-rates"
          partitions: 1
          replicationFactor: 2
    networkPolicy:
      enabled: false
    listeners:
      client:
        protocol: PLAINTEXT
      controller:
        protocol: PLAINTEXT
      interbroker:
        protocol: PLAINTEXT

# Subchart for keycloak
keycloak:
  replicaCount: 1

  image:
    repository: quay.io/keycloak/keycloak
    tag: "26.2.5"
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 9080

  KC_BOOTSTRAP_ADMIN_USERNAME: admin
  KC_BOOTSTRAP_ADMIN_PASSWORD: admin

  arguments:
    - start-dev
    - --import-realm

  realm: bankapp

  imagePullSecrets: [ ]
  nameOverride: ""
  fullnameOverride: "keycloak"

  realm–°onfig: |
    {
      "id": "417c67ad-0311-4b3a-8372-1c5be1677eb2",
      "realm": "bankapp",
      "notBefore": 0,
      "defaultSignatureAlgorithm": "RS256",
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "oauth2DeviceCodeLifespan": 600,
      "oauth2DevicePollingInterval": 5,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": false,
      "verifyEmail": false,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": false,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxTemporaryLockouts": 0,
      "bruteForceStrategy": "MULTIPLE",
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "9b1799a6-1184-4e07-9481-a82f1025dd50",
            "name": "default-roles-bankapp",
            "description": "${role_default-roles}",
            "composite": true,
            "composites": {
              "realm": [
                "offline_access",
                "uma_authorization"
              ],
              "client": {
                "account": [
                  "manage-account",
                  "view-profile"
                ]
              }
            },
            "clientRole": false,
            "containerId": "417c67ad-0311-4b3a-8372-1c5be1677eb2",
            "attributes": {}
          },
          {
            "id": "330bdbe2-67a9-42fb-8c5b-c2034ee563d9",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "417c67ad-0311-4b3a-8372-1c5be1677eb2",
            "attributes": {}
          },
          {
            "id": "cf940eaa-1e81-4597-b73c-5babd97a6900",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "417c67ad-0311-4b3a-8372-1c5be1677eb2",
            "attributes": {}
          }
        ],
        "client": {
          "bank_front": [
            {
              "id": "fda26645-b8ab-4ce2-8c5d-65bdc2d17a2c",
              "name": "uma_protection",
              "composite": false,
              "clientRole": true,
              "containerId": "0c3d1a09-2091-486e-b2a1-5312602e6be6",
              "attributes": {}
            }
          ],
          "realm-management": [
            {
              "id": "4861e930-7d34-477c-a098-1411de1b01e2",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "8a71d95f-9950-4959-9a6d-c105eca6daf9",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "8f9c42f1-47b9-459d-9163-541904514847",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "0caea802-046a-450a-a66e-3847ef27d220",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "26af1777-5544-4689-85fa-a6fb1c30e78c",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "245d2442-8fba-4bd3-974f-2276041e044d",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "5db2cc1f-b754-49a5-a482-4bdf1c202aff",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "7aa76b9d-d9a9-4a99-a58d-c88a415f9e28",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "4056c65c-95b1-430a-a236-e65e8a51718b",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "716ec759-d277-4086-b726-be2f0210e683",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "1cf2beb5-80c9-4563-8107-9a11ed8e6cb9",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-groups",
                    "query-users"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "419d9210-8541-4135-90da-4cab3bf22914",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "9feb25cc-653e-4960-963a-c46141d4e608",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "6b25142c-66a5-4ba8-877b-5c14fdef4b0c",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "11f797c5-ed70-4ab6-9896-c8f5bab021d6",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "4e5f9123-6d84-43cf-973d-eec00674d00f",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "647d7a1e-3126-45b4-b0d0-62e2f9982d94",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "f24b4fbe-3747-487b-b2cc-210142c675ca",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "manage-events",
                    "query-groups",
                    "manage-authorization",
                    "query-users",
                    "view-authorization",
                    "manage-users",
                    "view-identity-providers",
                    "view-users",
                    "manage-realm",
                    "view-realm",
                    "manage-identity-providers",
                    "create-client",
                    "impersonation",
                    "view-clients",
                    "query-clients",
                    "manage-clients",
                    "query-realms",
                    "view-events"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            },
            {
              "id": "8c321605-55f2-4721-82e9-61f6da852a8e",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
              "attributes": {}
            }
          ],
          "bank_transfer": [],
          "security-admin-console": [],
          "bank_cash": [],
          "admin-cli": [],
          "bank_exchange_generator": [],
          "account-console": [],
          "bank_accounts": [],
          "broker": [
            {
              "id": "19e074fe-2989-4363-bf82-9d2142eb33f6",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "dcf7f4fa-b7ed-45ba-a451-0d27e63c0baa",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "3408d138-bb66-4638-a4fe-a5998f62394d",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "43065daf-723b-4a3f-9eb2-4880fd6061ab",
              "attributes": {}
            },
            {
              "id": "af2a8ddc-2808-4483-b8dc-82a85d82d55b",
              "name": "delete-account",
              "description": "${role_delete-account}",
              "composite": false,
              "clientRole": true,
              "containerId": "43065daf-723b-4a3f-9eb2-4880fd6061ab",
              "attributes": {}
            },
            {
              "id": "768b41f2-1ed5-4b3b-8eba-b72070b7fccb",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "43065daf-723b-4a3f-9eb2-4880fd6061ab",
              "attributes": {}
            },
            {
              "id": "9ef689c2-f4be-462d-b616-0465d0ae500e",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "43065daf-723b-4a3f-9eb2-4880fd6061ab",
              "attributes": {}
            },
            {
              "id": "952daa65-5514-48d8-a7e3-5ea9acc4ab22",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "43065daf-723b-4a3f-9eb2-4880fd6061ab",
              "attributes": {}
            },
            {
              "id": "decf86c4-48fa-41a4-84c5-d78550ee032a",
              "name": "view-groups",
              "description": "${role_view-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "43065daf-723b-4a3f-9eb2-4880fd6061ab",
              "attributes": {}
            },
            {
              "id": "e2a9108a-1c7a-41ef-bbca-f28e6221b652",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "43065daf-723b-4a3f-9eb2-4880fd6061ab",
              "attributes": {}
            },
            {
              "id": "890c4d6e-dcf9-4258-b67b-be31a496146b",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "43065daf-723b-4a3f-9eb2-4880fd6061ab",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [],
      "defaultRole": {
        "id": "9b1799a6-1184-4e07-9481-a82f1025dd50",
        "name": "default-roles-bankapp",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "417c67ad-0311-4b3a-8372-1c5be1677eb2"
      },
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpPolicyCodeReusable": false,
      "otpSupportedApplications": [
        "totpAppFreeOTPName",
        "totpAppGoogleName",
        "totpAppMicrosoftAuthenticatorName"
      ],
      "localizationTexts": {},
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256",
        "RS256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyExtraOrigins": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256",
        "RS256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessExtraOrigins": [],
      "users": [
        {
          "id": "27a1da39-99e4-4443-a0e4-e464d50df74c",
          "username": "service-account-bank_accounts",
          "emailVerified": false,
          "createdTimestamp": 1750766660501,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "bank_accounts",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-bankapp"
          ],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "49ac4bbd-a134-4730-9afc-08734116b428",
          "username": "service-account-bank_cash",
          "emailVerified": false,
          "createdTimestamp": 1750773471692,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "bank_cash",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-bankapp"
          ],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "d1b2682b-6f61-443e-8e9d-8d27bbb566ae",
          "username": "service-account-bank_exchange_generator",
          "emailVerified": false,
          "createdTimestamp": 1750792581096,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "bank_exchange_generator",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-bankapp"
          ],
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "c3269833-4d69-4dc5-9922-0f94f457ced3",
          "username": "service-account-bank_front",
          "emailVerified": false,
          "createdTimestamp": 1750685813696,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "bank_front",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-bankapp"
          ],
          "clientRoles": {
            "bank_front": [
              "uma_protection"
            ]
          },
          "notBefore": 0,
          "groups": []
        },
        {
          "id": "df88c3e2-a037-4482-8a10-239522c43121",
          "username": "service-account-bank_transfer",
          "emailVerified": false,
          "createdTimestamp": 1750774223589,
          "enabled": true,
          "totp": false,
          "serviceAccountClientId": "bank_transfer",
          "disableableCredentialTypes": [],
          "requiredActions": [],
          "realmRoles": [
            "default-roles-bankapp"
          ],
          "notBefore": 0,
          "groups": []
        }
      ],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account",
              "view-groups"
            ]
          }
        ]
      },
      "clients": [
        {
          "id": "43065daf-723b-4a3f-9eb2-4880fd6061ab",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/bankapp/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/bankapp/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [],
          "optionalClientScopes": []
        },
        {
          "id": "bd270ac1-7440-47c3-bfba-138847f5beec",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/bankapp/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/realms/bankapp/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "cc4d5f24-5f5b-49c3-a918-4edefde48620",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [],
          "optionalClientScopes": []
        },
        {
          "id": "7bb23a05-26f9-40db-8fe2-1746b5b40479",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [],
          "optionalClientScopes": []
        },
        {
          "id": "b6f4c4e2-4c01-47d7-80ff-fd8b3f6b9b69",
          "clientId": "bank_accounts",
          "name": "bank_accounts",
          "description": "–°–µ—Ä–≤–∏—Å, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π –¥–∞–Ω–Ω—ã–µ –æ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–∞—Ö –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "EF3owQYOVaDIDnBr14jkSt3kuResW6x0",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1750766549",
            "backchannel.logout.session.required": "true",
            "standard.token.exchange.enabled": "false",
            "frontchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "notifications"
          ],
          "optionalClientScopes": []
        },
        {
          "id": "1e576e52-a1c2-4c73-9284-b64b4447a43e",
          "clientId": "bank_cash",
          "name": "bank_cash",
          "description": "–°–µ—Ä–≤–∏—Å, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –Ω–∞–ª–∏—á–Ω—ã–º–∏ ",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "h09XeFhfvzA4wB68DyIwFx7zKM27aGP7",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1750773471",
            "backchannel.logout.session.required": "true",
            "standard.token.exchange.enabled": "false",
            "frontchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "blocker",
            "accounts",
            "notifications"
          ],
          "optionalClientScopes": []
        },
        {
          "id": "023d96a5-1a5c-4e24-b0dd-785df69ff0ff",
          "clientId": "bank_exchange_generator",
          "name": "bank_exchange_generator",
          "description": "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "N1VSP9EH3qUeGa98gzE4qxnFsTg7Q8eO",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1750792581",
            "backchannel.logout.session.required": "true",
            "standard.token.exchange.enabled": "false",
            "frontchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "exchange"
          ],
          "optionalClientScopes": []
        },
        {
          "id": "0c3d1a09-2091-486e-b2a1-5312602e6be6",
          "clientId": "bank_front",
          "name": "bank_front",
          "description": "Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ–Ω–µ—á–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "wKWXOS1YJgNvFHt6jHL2mjgmHHvGu2r0",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "client.secret.creation.time": "1750685813",
            "request.object.signature.alg": "any",
            "request.object.encryption.alg": "any",
            "client.introspection.response.allow.jwt.claim.enabled": "false",
            "standard.token.exchange.enabled": "false",
            "frontchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "use.jwks.url": "false",
            "backchannel.logout.revoke.offline.tokens": "false",
            "use.refresh.tokens": "true",
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.use.lightweight.access.token.enabled": "false",
            "backchannel.logout.session.required": "true",
            "request.object.required": "not required",
            "client_credentials.use_refresh_token": "false",
            "access.token.header.type.rfc9068": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "require.pushed.authorization.requests": "false",
            "acr.loa.map": "{}",
            "display.on.consent.screen": "false",
            "request.object.encryption.enc": "any",
            "token.response.type.bearer.lower-case": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "transfer",
            "exchange",
            "accounts",
            "cash"
          ],
          "optionalClientScopes": []
        },
        {
          "id": "897f7aa8-9213-461e-a434-7d873d9950c0",
          "clientId": "bank_transfer",
          "name": "bank_transfer",
          "description": "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –æ—Ç–≤–µ—á–∞—é—â–µ–µ –∑–∞ –¥–µ–Ω–µ–∂–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã",
          "rootUrl": "",
          "adminUrl": "",
          "baseUrl": "",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "TBdc8HtAio8f0SXlvHPWS6Cbbz5i6yEf",
          "redirectUris": [
            "/*"
          ],
          "webOrigins": [
            "/*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": true,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1750774223",
            "backchannel.logout.session.required": "true",
            "standard.token.exchange.enabled": "false",
            "frontchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "+",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "blocker",
            "exchange",
            "accounts",
            "notifications"
          ],
          "optionalClientScopes": []
        },
        {
          "id": "dcf7f4fa-b7ed-45ba-a451-0d27e63c0baa",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "true",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [],
          "optionalClientScopes": []
        },
        {
          "id": "3c12aea0-8edb-4736-b98b-1c6210b615a3",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "true",
            "post.logout.redirect.uris": "+"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [],
          "optionalClientScopes": []
        },
        {
          "id": "a5059748-0a07-418d-befc-72ddd284a413",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/bankapp/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "redirectUris": [
            "/admin/bankapp/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "client.use.lightweight.access.token.enabled": "true",
            "post.logout.redirect.uris": "+",
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "aa999fd9-d335-4a38-bc28-b7b216750951",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "introspection.token.claim": "true",
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [],
          "optionalClientScopes": []
        }
      ],
      "clientScopes": [
        {
          "id": "7f483666-2e38-42a8-b827-4ef441bd2ca5",
          "name": "exchange",
          "description": "–î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å—É bank-exchange",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          }
        },
        {
          "id": "2cbea78e-0814-4e09-b486-2526b1f22125",
          "name": "accounts",
          "description": "–î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é bank_accounts",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          }
        },
        {
          "id": "cf932c58-9ca0-4ae6-a0dc-f83e578eb754",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        },
        {
          "id": "b321d340-86e9-4e0f-8fc2-01aef02f833c",
          "name": "notifications",
          "description": "–î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å—É bank_notifications",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          }
        },
        {
          "id": "a0151763-dd0f-49fe-a852-628b4ffe0a1d",
          "name": "cash",
          "description": "–î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å—É bank_cash",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          }
        },
        {
          "id": "42039ce5-cb45-4997-8858-35bebe65302b",
          "name": "transfer",
          "description": "–î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å—É bank-transfer",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          }
        },
        {
          "id": "35e2b668-ef9b-42a6-aed2-6cc232af8e6b",
          "name": "blocker",
          "description": "–î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–∏—Å—É bank-blocker",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "gui.order": "",
            "consent.screen.text": ""
          }
        }
      ],
      "defaultDefaultClientScopes": [
        "notifications",
        "cash"
      ],
      "defaultOptionalClientScopes": [
        "offline_access"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {},
      "eventsEnabled": false,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "identityProviders": [],
      "identityProviderMappers": [],
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "18c57f73-5364-4e89-bad8-a53311beef64",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "0ecbe7d0-6b7d-4d28-8c10-164f76988bfe",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "a2a8ab61-7078-421f-9cb1-aecdf52ec5a5",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          },
          {
            "id": "e11d0c1b-d871-4f74-ac26-01c622f08654",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-address-mapper",
                "saml-user-attribute-mapper",
                "oidc-full-name-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "oidc-usermodel-property-mapper",
                "saml-role-list-mapper",
                "saml-user-property-mapper",
                "oidc-usermodel-attribute-mapper"
              ]
            }
          },
          {
            "id": "cbc5fc1c-bb4a-416d-ae05-c700022c6ea7",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "f5613814-f074-4660-8b10-c4c411be1090",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "67f9b209-5e94-401a-9091-111de992d12e",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "beeeda13-776e-4cd5-ac54-b3ce8a3226fc",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-full-name-mapper",
                "saml-role-list-mapper",
                "oidc-usermodel-attribute-mapper",
                "oidc-usermodel-property-mapper",
                "saml-user-property-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-user-attribute-mapper",
                "oidc-address-mapper"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "id": "4fd51c1f-9b84-4c01-a749-4add5836d79e",
            "name": "hmac-generated-hs512",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS512"
              ]
            }
          },
          {
            "id": "8ddbfe37-f75a-4ac9-9f7f-55aa0f2046d2",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "ac84ef71-59c7-4868-be2d-094e3a7e047e",
            "name": "rsa-generated",
            "providerId": "rsa-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "99d4355b-e96e-4f54-b231-9a4dc7c4702c",
            "name": "rsa-enc-generated",
            "providerId": "rsa-enc-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "RSA-OAEP"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "ff2c60b6-ba71-4ea2-b040-c1eb4d0ce0ec",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "77dc41b2-1d71-43bd-92bc-b77401326a9c",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "e9358e22-1b7c-4206-85d4-917c6f83dc56",
          "alias": "Browser - Conditional Organization",
          "description": "Flow to determine if the organization identity-first login is to be used",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "organization",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "d29f5dbf-e9b1-48c3-8495-e750a52258b6",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "8816a2e8-029d-4fde-82ee-c76073495b7d",
          "alias": "First Broker Login - Conditional Organization",
          "description": "Flow to determine if the authenticator that adds organization members is to be used",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "idp-add-organization-member",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0db82b26-4349-4dd2-8417-92cbfe1070a1",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-otp-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "fac9b88a-1f64-4ac0-8d8c-83bc8cf6b1cf",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "5ae81128-c1ce-4097-8d5e-ebb91a51fa16",
          "alias": "Organization",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional Organization",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0b17c04a-dd08-4060-8372-c43f43555919",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-otp",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "4795fbc6-d71b-439e-8b85-46580276246a",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "4b957a60-94e6-4888-a938-e67aa575a9fa",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "0fa02268-d4f5-4f0f-8adb-a53607ae7e76",
          "alias": "browser",
          "description": "Browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "auth-spnego",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 26,
              "autheticatorFlow": true,
              "flowAlias": "Organization",
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "forms",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "a85b7881-1f9e-48c4-b7cd-cb98b22a514a",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-secret-jwt",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "client-x509",
              "authenticatorFlow": false,
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "1a7d4377-9ed9-4b73-95d9-514a45883d71",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 30,
              "autheticatorFlow": true,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "5c97dbd5-07bd-4a6a-9be8-f61297663545",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "568d0b58-3b1a-4d65-af27-855f8d6b42fc",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 50,
              "autheticatorFlow": true,
              "flowAlias": "First Broker Login - Conditional Organization",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "b84a1b64-b3db-43de-83f0-bac46610a224",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 20,
              "autheticatorFlow": true,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "952e42a0-4947-4b43-a124-667a7c43cc8e",
          "alias": "registration",
          "description": "Registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "authenticatorFlow": true,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": true,
              "flowAlias": "registration form",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "ebe15a77-7999-41ca-a5d4-c368f895aa05",
          "alias": "registration form",
          "description": "Registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-password-action",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 50,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 60,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "registration-terms-and-conditions",
              "authenticatorFlow": false,
              "requirement": "DISABLED",
              "priority": 70,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "b703c868-57c0-4cdd-bd2d-d55cebb5b883",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-credential-email",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 20,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticator": "reset-password",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 30,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            },
            {
              "authenticatorFlow": true,
              "requirement": "CONDITIONAL",
              "priority": 40,
              "autheticatorFlow": true,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false
            }
          ]
        },
        {
          "id": "d6ece476-e026-4420-b90e-1cf9954a598d",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "authenticatorFlow": false,
              "requirement": "REQUIRED",
              "priority": 10,
              "autheticatorFlow": false,
              "userSetupAllowed": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "163b7710-3e2a-4394-95a4-48d0e8806a22",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "117726ef-5edf-4212-afe7-abc9642455d3",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "TERMS_AND_CONDITIONS",
          "name": "Terms and Conditions",
          "providerId": "TERMS_AND_CONDITIONS",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "delete_account",
          "name": "Delete Account",
          "providerId": "delete_account",
          "enabled": false,
          "defaultAction": false,
          "priority": 60,
          "config": {}
        },
        {
          "alias": "webauthn-register",
          "name": "Webauthn Register",
          "providerId": "webauthn-register",
          "enabled": true,
          "defaultAction": false,
          "priority": 70,
          "config": {}
        },
        {
          "alias": "webauthn-register-passwordless",
          "name": "Webauthn Register Passwordless",
          "providerId": "webauthn-register-passwordless",
          "enabled": true,
          "defaultAction": false,
          "priority": 80,
          "config": {}
        },
        {
          "alias": "VERIFY_PROFILE",
          "name": "Verify Profile",
          "providerId": "VERIFY_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 90,
          "config": {}
        },
        {
          "alias": "delete_credential",
          "name": "Delete Credential",
          "providerId": "delete_credential",
          "enabled": true,
          "defaultAction": false,
          "priority": 100,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "firstBrokerLoginFlow": "first broker login",
      "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "clientOfflineSessionMaxLifespan": "0",
        "oauth2DevicePollingInterval": "5",
        "clientSessionIdleTimeout": "0",
        "parRequestUriLifespan": "60",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false"
      },
      "keycloakVersion": "26.2.5",
      "userManagedAccessAllowed": false,
      "organizationsEnabled": false,
      "verifiableCredentialsEnabled": false,
      "adminPermissionsEnabled": false,
      "clientProfiles": {
        "profiles": []
      },
      "clientPolicies": {
        "policies": []
      }
    }