server.port: ${SERVER_PORT}

spring:
  application:
    name: ${SPRING_APPLICATION_NAME}
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
  sql.init:
    mode: ALWAYS
    schema-locations: classpath:schema.sql
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
      group-id: bank-notifications
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.type.mapping: note:com.github.mrchcat.shared.notification.BankNotificationDto
        spring.json.trusted.packages: com.github.mrchcat.*
        isolation.level: read_committed
      enable-auto-commit: true
      auto-offset-reset: earliest
  mail:
    host: ${SMTP_SERVER_HOST}
    port: ${SMTP_SERVER_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp:
        auth: true
        starttls.enable: true
        ssl.enable: true

management:
  endpoints.web.exposure.include: info, health
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT}
  tracing:
    sampling:
      probability: ${ZIPKIN_TRACING_PROBABILITY}

logging:
  pattern.file: "%d{HH:mm:ss} %-5level %logger{36} - %msg%n"
  level:
    root: ${LOG_LEVEL:DEBUG}
    org.zalando.logbook: ${LOG_LEVEL:DEBUG}

application:
  kafka:
    topic:
      notifications: ${KAFKA_NOTIFICATIONS_TOPIC}
  mail:
    enabled: ${MAIL_DELIVERY_ENABLED}
    from_address: ${FROM_MAIL_ADDRESS}
    sender_name: ${SENDER_NAME_FOR_MAIL}
